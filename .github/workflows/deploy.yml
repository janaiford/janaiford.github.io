name: Deploy Jekyll site to GitHub Pages

# Trigger on pushes to master (or change to main if needed), and allow manual runs
on:
  push:
    branches: ["master"]
  workflow_dispatch:

# Grant minimal permissions needed for pages
permissions:
  contents: read      
  pages: write        
  id-token: write    

# Ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out repository
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. Set up Ruby 
      - name: Set up Ruby 3.4.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.3'
          bundler-cache: true     # auto cache gems between runs

      # 3. Install dependencies via Bundler
      - name: Install Ruby gems
        run: |
          gem install bundler      # ensure Bundler is available
          bundle install           # uses Gemfile & Gemfile.lock

      # 4. Configure GitHub Pages context
      - name: Prepare GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      # 5. Build site with Jekyll into _site/
      - name: Build with Jekyll
        run: bundle exec jekyll build \
              --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      # 6. Upload the generated _site/ directory as an artifact
      - name: Upload generated site
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # 7. Deploy that artifact to GitHub Pages (gh-pages branch)
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          publish_branch: gh-pages
